// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Data.Migrations
{
    [DbContext(typeof(StoreContext))]
    [Migration("20230427101500_Nomenclatoare2")]
    partial class Nomenclatoare2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("API.Entities.Serviciu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Denumire")
                        .HasColumnType("TEXT");

                    b.Property<string>("Prescurtare")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Valid")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Servicii");
                });

            modelBuilder.Entity("API.Entities.Solicitare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Denumire")
                        .HasColumnType("TEXT");

                    b.Property<int>("ServiciuAsignatId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ServiciuId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Valid")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ServiciuId");

                    b.ToTable("Solicitari");
                });

            modelBuilder.Entity("API.Entities.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Denumire")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Statusuri");
                });

            modelBuilder.Entity("API.Entities.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descriere")
                        .HasColumnType("TEXT");

                    b.Property<int>("ServiciuId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SolicitareId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StatusId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UnitateId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Valid")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("dataDeschidereTicket")
                        .HasColumnType("TEXT");

                    b.Property<string>("emailSolicitant")
                        .HasColumnType("TEXT");

                    b.Property<int>("idLucratorAsignat")
                        .HasColumnType("INTEGER");

                    b.Property<int>("idUserExpeditor")
                        .HasColumnType("INTEGER");

                    b.Property<string>("tlfMobilSolicitant")
                        .HasColumnType("TEXT");

                    b.Property<string>("tlfnInteriorSolicitant")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ServiciuId");

                    b.HasIndex("SolicitareId");

                    b.HasIndex("StatusId");

                    b.HasIndex("UnitateId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("API.Entities.Unitate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Denumire")
                        .HasColumnType("TEXT");

                    b.Property<string>("Prescurtare")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Valid")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Unitati");
                });

            modelBuilder.Entity("API.Entities.Solicitare", b =>
                {
                    b.HasOne("API.Entities.Serviciu", "Serviciu")
                        .WithMany()
                        .HasForeignKey("ServiciuId");

                    b.Navigation("Serviciu");
                });

            modelBuilder.Entity("API.Entities.Ticket", b =>
                {
                    b.HasOne("API.Entities.Serviciu", "Serviciu")
                        .WithMany()
                        .HasForeignKey("ServiciuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Entities.Solicitare", "Solicitare")
                        .WithMany()
                        .HasForeignKey("SolicitareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Entities.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Entities.Unitate", "Unitate")
                        .WithMany()
                        .HasForeignKey("UnitateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Serviciu");

                    b.Navigation("Solicitare");

                    b.Navigation("Status");

                    b.Navigation("Unitate");
                });
#pragma warning restore 612, 618
        }
    }
}
